cmake_minimum_required(VERSION 3.0)
project(mumdex)

# Check if the operating system is macOS
if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    message(STATUS "Compiling on macOS")
    # Add macOS-specific settings here
    # Example: Add a specific library or compiler flag for macOS
    # set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,/usr/local/lib")
endif()

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

find_package(X11)
find_package(GSL REQUIRED)
include_directories(${GSL_INCLUDE_DIRS})
find_package (Python COMPONENTS Interpreter Development)

find_package(PythonLibs REQUIRED)
include_directories(${PYTHON_INCLUDE_DIRS})

# Add compile options
add_compile_options(-fPIC)

# Add link options
#add_link_options(-pic)

# Ensure CMake is using the correct compiler
#set(CMAKE_C_COMPILER "/mnt/wigclust23/data/safe/yamrom/work/miniconda3/envs/mumdex/bin/x86_64-conda-linux-gnu-gcc")
#set(CMAKE_CXX_COMPILER "/mnt/wigclust23/data/safe/yamrom/work/miniconda3/envs/mumdex/bin/x86_64-conda-linux-gnu-g++")
#message(STATUS "Variable 'CONDA_PREFIX' is defined and not empty: ${CONDA_PREFIX}")
file(GLOB SRC_FILES "*.cpp")

foreach (file ${SRC_FILES})
  # message(STATUS ${file})
  get_filename_component(target ${file} NAME_WE)
  #if (DEFINED target AND NOT "${target}" STREQUAL "")
  #  message(STATUS "Variable 'target' is defined and not empty: ${target}")
  #else ()
  #  message(STATUS "Variable 'target' is either not defined or empty")
  #endif ()
  
  message(STATUS "${target}") 
  if ( ${target} STREQUAL "utility" OR ${target} STREQUAL "files" OR ${target} STREQUAL "genes" OR ${target} STREQUAL "x11plot")
	add_library(${target} ${file})
  else ( ${target} STREQUAL "utility" OR ${target} STREQUAL "files" OR ${target} STREQUAL "genes"  OR ${target} STREQUAL "x11plot")
	add_executable (${target} ${file})
  endif ( ${target} STREQUAL "utility" OR ${target} STREQUAL "files" OR ${target} STREQUAL "genes"  OR ${target} STREQUAL "x11plot")
  target_include_directories(${target} PRIVATE ${CMAKE_SOURCE_DIR} )
endforeach (file ${SRC_FILES})

target_link_libraries ( population_denovos PUBLIC utility )
target_link_libraries ( population_bridges PUBLIC utility )
target_link_libraries ( merge_mumdex PUBLIC files )
target_link_libraries ( mummer PUBLIC files )
target_link_libraries ( mview PRIVATE x11plot ${X11_LIBRARIES})
target_link_libraries ( test_beta PUBLIC ${GSL_LIBRARIES} )
target_link_libraries ( bridges2txt PUBLIC utility )
target_link_libraries ( map2txt PUBLIC utility )
target_link_libraries ( mumdex2txt PUBLIC utility )
target_link_libraries ( mumdex2txt_fast PUBLIC utility )
target_link_libraries ( pop2txt PUBLIC utility )
target_link_libraries ( mumdex2sam PUBLIC utility files )
target_link_libraries ( mumdex2txt PUBLIC files )
target_link_libraries ( mumdex2txt_fast PUBLIC files )
target_link_libraries ( namepair PUBLIC utility )
target_link_libraries ( namepair_full PUBLIC utility )
target_link_libraries ( find_bridge PUBLIC utility )
target_link_libraries ( find_indel PUBLIC utility )
target_link_libraries ( check_bridges_result PUBLIC utility )
target_link_libraries ( check_bridges PUBLIC utility files)
target_link_libraries ( check_mappability PUBLIC files )
target_link_libraries ( check_mumdex PUBLIC utility )
target_link_libraries ( check_cand_cn PUBLIC ${GSL_LIBRARIES} )
target_link_libraries ( check_for_pseudogene PUBLIC genes )
target_link_libraries ( find_diploid_exons PUBLIC genes )
target_link_libraries ( extract_cn_segments PUBLIC genes ${GSL_LIBRARIES} )
target_link_libraries ( smash PUBLIC files utility)
target_link_libraries ( pop_cn PUBLIC files utility genes ${GSL_LIBRARIES} )
target_link_libraries ( ggraph PUBLIC genes x11plot ${X11_LIBRARIES} )
target_link_libraries ( anchor_reads PUBLIC genes utility)
target_link_libraries ( anchor_repeatness PUBLIC files )
target_link_libraries ( show_pairs PUBLIC utility files )
target_link_libraries ( show_mums PUBLIC utility files )
target_link_libraries ( show_counts_special PUBLIC utility files )
target_link_libraries ( show_counts PUBLIC utility files )
target_link_libraries ( show_all_counts PUBLIC utility files )
target_link_libraries ( repeatness PUBLIC files )
target_link_libraries ( count_anchors PUBLIC files )
target_link_libraries ( count_genes PUBLIC files genes utility )
target_link_libraries ( count_pseudogenes PUBLIC files genes utility )
target_link_libraries ( denovo_cn PUBLIC ${GSL_LIBRARIES} )
target_link_libraries ( denovo_pseudogenes PUBLIC files genes utility )
target_link_libraries ( mumdex_examples PUBLIC utility )
target_link_libraries ( position_coverage PUBLIC utility )
target_link_libraries ( explore_coverage PUBLIC utility )
target_link_libraries ( plot_coverage PUBLIC utility )
