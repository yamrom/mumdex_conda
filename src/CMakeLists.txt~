cmake_minimum_required(VERSION 3.0)
project(mumdex)
find_package(X11)
find_package(GSL REQUIRED)
include_directories(${GSL_INCLUDE_DIRS})

file(GLOB SRC_FILES "*.cpp")

foreach (file ${SRC_FILES})
  get_filename_component(target ${file} NAME_WE)
  
  message(STATUS "${target}") 
  if ( ${target} STREQUAL "utility" OR ${target} STREQUAL "files")
	add_library(${target} ${file})
  else ( ${target} STREQUAL "utility" OR ${target} STREQUAL "files" )
	add_executable (${target} ${file})
  endif (${target} STREQUAL "utility" OR ${target} STREQUAL "files")
  target_include_directories(${target} PRIVATE ${CMAKE_SOURCE_DIR} )
endforeach (file ${SRC_FILES})

add_library(x11plot STATIC x11plot.h)
set_target_properties(x11plot PROPERTIES LINKER_LANGUAGE CXX)

target_link_libraries ( population_denovos PUBLIC utility )
target_link_libraries ( population_bridges PUBLIC utility )
target_link_libraries ( merge_mumdex PUBLIC files )
target_link_libraries ( mummer PUBLIC files )
target_link_libraries ( mview PRIVATE x11plot  ${X11_LIBRARIES})
target_link_libraries ( test_beta PUBLIC ${GSL_LIBRARIES} )
target_link_libraries ( bridges2txt PUBLIC utility )
target_link_libraries ( map2txt PUBLIC utility )
target_link_libraries ( mumdex2txt PUBLIC utility )
target_link_libraries ( mumdex2txt_fast PUBLIC utility )
target_link_libraries ( pop2txt PUBLIC utility )
target_link_libraries ( mumdex2sam PUBLIC utility )
target_link_libraries ( mumdex2sam PUBLIC files )
target_link_libraries ( mumdex2txt PUBLIC files )
target_link_libraries ( mumdex2txt_fast PUBLIC files )
target_link_libraries ( namepair PUBLIC utility )
target_link_libraries ( namepair_full PUBLIC utility )
